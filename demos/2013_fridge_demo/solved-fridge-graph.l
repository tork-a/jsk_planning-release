#s(pddl-graph plist nil nodes (#1=#s(arced-node plist ((:func-name . #6="(move-to frontfridge start)") (:pddl-state (at frontfridge) #2=(closed) #3=(onhand can)) (:name . "((at frontfridge)\\n(closed)\\n(onhand can))")) arc-list (#s(arc plist ((:name . "(move-to_f frontfridge start)")) from #1# to #5=#s(arced-node plist ((:func-name . #4="(move-recoverly)") (:pddl-state #7=(at somewhere) #2# #3#) (:name . "((at somewhere)\\n(closed)\\n(onhand can))")) arc-list (#s(arc plist ((:name . #4#)) from #5# to #1#)))) #s(arc plist ((:name . #6#)) from #1# to #29=#s(arced-node plist ((:func-name . "goal0") (:pddl-state (at start) #26=(closed) #3#) (:name . "((at start)\\n(closed)\\n(onhand can))")) arc-list nil)))) #5# #9=#s(arced-node plist ((:func-name . #8="(try-close)") (:pddl-state #7# #3#) (:name . "((at somewhere)\\n(onhand can))")) arc-list (#s(arc plist ((:name . #8#)) from #9# to #5#))) #10=#s(arced-node plist ((:func-name . "(try-close) ") (:pddl-state (at somewhere)) (:name . "((at somewhere))")) arc-list (#s(arc plist ((:name . "(try-close)")) from #10# to #11=#s(arced-node plist ((:func-name . "(move-recoverly) ") (:pddl-state (at somewhere) #12=(closed)) (:name . "((at somewhere)\\n(closed))")) arc-list (#s(arc plist ((:name . "(move-recoverly)")) from #11# to #14=#s(arced-node plist ((:func-name . #13="(open-door)") (:pddl-state #15=(at frontfridge) #12#) (:name . "((at frontfridge)\\n(closed))")) arc-list (#s(arc plist ((:name . #13#)) from #14# to #16=#s(arced-node plist ((:func-name . #17="(move-to frontfridge pregrasp)") (:pddl-state #15#) (:name . "((at frontfridge))")) arc-list (#s(arc plist ((:name . "(move-to_f frontfridge pregrasp)")) from #16# to #10#) #s(arc plist ((:name . #17#)) from #16# to #19=#s(arced-node plist ((:func-name . #18="(grasp-object can)") (:pddl-state #20=(at pregrasp)) (:name . "((at pregrasp))")) arc-list (#s(arc plist ((:name . #18#)) from #19# to #21=#s(arced-node plist ((:func-name . #22="(move-to pregrasp preclose)") (:pddl-state #20# #3#) (:name . "((at pregrasp)\\n(onhand can))")) arc-list (#s(arc plist ((:name . "(move-to_f pregrasp preclose)")) from #21# to #9#) #s(arc plist ((:name . #22#)) from #21# to #24=#s(arced-node plist ((:func-name . #23="(close-door)") (:pddl-state #25=(at preclose) #3#) (:name . "((at preclose)\\n(onhand can))")) arc-list (#s(arc plist ((:name . #23#)) from #24# to #27=#s(arced-node plist ((:func-name . #28="(move-to preclose start)") (:pddl-state #25# #26# #3#) (:name . "((at preclose)\\n(closed)\\n(onhand can))")) arc-list (#s(arc plist ((:name . "(move-to_f preclose start)")) from #27# to #5#) #s(arc plist ((:name . #28#)) from #27# to #29#)))))))))))))))))))))))) #11# #29# #27# #24# #21# #19# #16# #14# #30=#s(arced-node plist ((:func-name . #31="(move-to start frontfridge)") (:pddl-state (at start) #12#) (:name . "((at start)\\n(closed))")) arc-list (#s(arc plist ((:name . "(move-to_f start frontfridge)")) from #30# to #11#) #s(arc plist ((:name . #31#)) from #30# to #14#)))) start-state nil goal-state nil cntr 13)
